"use strict";"use client";var _typeof=require("@babel/runtime/helpers/typeof");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _react=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _reactNativeReanimated=_interopRequireWildcard(require("react-native-reanimated"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var Ticks=function Ticks(_ref){var points=_ref.points,max=_ref.max,min=_ref.min,sliderValue=_ref.sliderValue,styles=_ref.styles;var range=max-min;var elements=(0,_react.useMemo)(function(){return points.map(function(point){var style={left:"".concat(Math.abs(point-min)/range*100,"%")};return _react.default.createElement(Tick,{key:point,styles:styles,style:style,point:point,sliderValue:sliderValue});});},[points,min,range,styles,sliderValue]);return _react.default.createElement(_reactNative.View,{style:styles.ticks},elements);};var _default=exports.default=Ticks;var Tick=(0,_react.memo)(function(_ref2){var style=_ref2.style,styles=_ref2.styles,sliderValue=_ref2.sliderValue,point=_ref2.point;var tickActive=(0,_react.useMemo)(function(){return _reactNative.StyleSheet.flatten(styles.tickActive);},[styles.tickActive]);var active=(0,_reactNativeReanimated.useAnimatedStyle)(function(){return(Array.isArray(sliderValue.value)?point<=Math.max(sliderValue.value[0],sliderValue.value[1])&&point>=Math.min(sliderValue.value[1],sliderValue.value[0]):point<=(sliderValue.value||0))?tickActive:{backgroundColor:'transparent'};},[point,tickActive]);return _react.default.createElement(_reactNativeReanimated.default.View,{style:[styles.tick,active,style]});});