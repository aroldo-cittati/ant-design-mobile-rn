"use strict";"use client";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _react=_interopRequireDefault(require("react"));var _reactNative=require("react-native");function _callSuper(t,o,e){return o=(0,_getPrototypeOf2.default)(o),(0,_possibleConstructorReturn2.default)(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],(0,_getPrototypeOf2.default)(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}var Input=function(_React$Component){function Input(props){var _this;(0,_classCallCheck2.default)(this,Input);_this=_callSuper(this,Input,[props]);_this.focus=function(){if(_this.inputRef){_this.inputRef.focus();}};_this.clear=function(){if(_this.inputRef){_this.inputRef.clear();}};_this.state={focused:props.focused||false};return _this;}(0,_inherits2.default)(Input,_React$Component);return(0,_createClass2.default)(Input,[{key:"UNSAFE_componentWillReceiveProps",value:function UNSAFE_componentWillReceiveProps(nextProps){if(nextProps.focused!==this.state.focused){this.setState({focused:nextProps.focused});}}},{key:"componentDidMount",value:function componentDidMount(){if(this.inputRef&&(this.props.autoFocus||this.props.focused)){this.inputRef.focus();}}},{key:"componentDidUpdate",value:function componentDidUpdate(){if(this.inputRef&&this.props.focused){this.inputRef.focus();}}},{key:"render",value:function render(){var _this2=this;return _react.default.createElement(_reactNative.TextInput,(0,_extends2.default)({ref:function ref(el){return _this2.inputRef=el;},underlineColorAndroid:"transparent"},this.props));}}]);}(_react.default.Component);var _default=exports.default=Input;